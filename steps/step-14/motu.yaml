openapi: "3.0.0"

info:
  title: Masters of the Universe
  version: "1.0"
  # TODO: Tell more about this API

paths:
  /characters:
    get:
      summary: Search characters
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharactersPaginated'
        '401':
          $ref: '#/components/schemas/Errors'
    post:
      summary: Add a character
      # TODO: Tell more about this operation
      requestBody:
        $ref: '#/components/requestBodies/Character'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
    
  /characters/{characterId}:
    parameters:
      - $ref: '#/components/parameters/CharacterId'
    get:
      summary: Read a character
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '401':
          $ref: '#/components/schemas/Errors'
    delete:
      summary: Delete a character
      responses:
        '204':
          description: No Content
          # TODO: Change to a description that tells something interesting
        '401':
          $ref: '#/components/schemas/Errors'
    put:
      summary: Replace a character
      requestBody:
        $ref: '#/components/requestBodies/Character'
      responses:
        '204':
          description: No Content

components:
  requestBodies:
    Character:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Character'
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
  parameters:
    CharacterId:
      name: characterId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/CharacterId'
  schemas:
    CharactersPaginated:
      allOf:
        - $ref: '#/components/schemas/Paginated'
        - properties:
            items:
              type: array
              maxItems: 3
              items:
                $ref: '#/components/schemas/CharacterSummary'
    Paginated:
      properties:
        pagination:
          required:
            - page
            - pageSize
          properties:
            page:
              type: integer
              minimum: 0
            pageSize:
              type: integer
              minimum: 0
              maximum: 50
    Errors:
      # TODO: Tell more about this schema
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          items:
            type: object
            required:
              - code
              - message
            properties:
              code:
                type: string
              message:
                type: string
              location:
                type: string
                # TODO: What is a location actually?
    CharacterId:
      type: string
      pattern: ^[a-z]{3,}$
      readOnly: true
    CharacterSummary:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/CharacterId'
        name:
          type: string
          minLength: 3
          maxLength: 36
        sideKickId:
          type: string      
    Character:
      allOf:
        - $ref: '#/components/schemas/CharacterSummary'
        - type: object
          properties:
            birthDate:
              type: string
              format: date
              writeOnly: true
            age:
              type: integer
              minimum: 0
              maximum: 128
              readOnly: true
            side:
              type: string
              enum:
                - hero
                - villain
                - neutral
            archEnemyId:
              type: string